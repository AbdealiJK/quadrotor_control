<?xml version="1.0"?>
<launch>
  <!-- ################################################################### -->
  <!-- Start Gazebo with world running in (max) realtime -->

  <!-- Use this argument to set which world file to open -->
  <arg name="world" value="$(find rl_env)/src/Env/HectorQuad/quad.world"/>
  <!-- Use this argument to decide whether gui should be enabled or not -->
  <arg name="gazebo_gui" value="false" />
  <!-- Extra args to gazebo -->
  <arg name="args" value="" />

  <param name="/use_sim_time" value="true" />

  <!-- Start the headless gazebo -->
  <node name="gazebo" pkg="gazebo_ros" type="gzserver" args="$(arg world) $(arg args)" respawn="false" output="screen"/>

  <!-- Start gazebo gui - if asked for it -->
  <group if="$(arg gazebo_gui)">
    <node name="gazebo_gui" pkg="gazebo_ros" type="gzclient" respawn="false" output="screen"/>
  </group>

  <!-- ################################################################### -->
  <!-- Spawn quadrotor uav -->
  <arg name="name" default="quadrotor"/>
  <arg name="model" default="$(find rl_env)/src/Env/HectorQuad/quad.gazebo.xacro"/>
  <arg name="tf_prefix" default="$(optenv ROS_NAMESPACE)"/>
  <arg name="x" default="0.0"/>
  <arg name="y" default="0.0"/>
  <arg name="z" default="5"/>

  <arg name="use_ground_truth_for_tf" default="true" />
  <arg name="use_ground_truth_for_control" default="true" />
  <arg name="use_pose_estimation" if="$(arg use_ground_truth_for_control)" default="false"/>
  <arg name="use_pose_estimation" unless="$(arg use_ground_truth_for_control)" default="true"/>

  <!-- send the robot XML to param server -->
  <param name="robot_description" command="$(find xacro)/xacro.py '$(arg model)'" />
  <param name="tf_prefix" type="string" value="$(arg tf_prefix)" />

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="spawn_robot" pkg="gazebo_ros" type="spawn_model"
    args="-param robot_description
          -urdf
          -x $(arg x)
          -y $(arg y)
          -z $(arg z)
          -model $(arg name)"
    respawn="false" output="screen"/>

  <!-- start robot state publisher -->
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen" >
    <param name="publish_frequency" type="double" value="50.0" />
  </node>

  <!-- publish state and tf -->
  <node name="ground_truth_to_tf" pkg="message_to_tf" type="message_to_tf" output="screen">
    <param name="odometry_topic" value="ground_truth/state" />
    <param name="frame_id" value="/world" />
    <param name="tf_prefix" value="$(arg tf_prefix)" if="$(arg use_ground_truth_for_tf)" />
    <param name="tf_prefix" value="$(arg tf_prefix)/ground_truth" unless="$(arg use_ground_truth_for_tf)" />
  </node>
  <group if="$(arg use_pose_estimation)">
    <node name="pose_estimation" pkg="hector_quadrotor_pose_estimation" type="hector_quadrotor_pose_estimation" output="screen">
      <rosparam file="$(find hector_quadrotor_pose_estimation)/params/simulation.yaml" />
      <param name="nav_frame" value="$(arg tf_prefix)/nav" />
      <param name="publish_world_nav_transform" value="true" />
      <param name="tf_prefix" value="$(arg tf_prefix)" unless="$(arg use_ground_truth_for_tf)" />
      <param name="tf_prefix" value="$(arg tf_prefix)/pose_estimation" if="$(arg use_ground_truth_for_tf)" />
    </node>
  </group>

  <!-- spawn controller -->
  <group if="$(arg use_ground_truth_for_control)">
    <param name="controller/state_topic" value="" />
    <param name="controller/imu_topic" value="" />
  </group>
  <group unless="$(arg use_ground_truth_for_control)">
    <param name="controller/state_topic" value="state" />
    <param name="controller/imu_topic" value="imu" />
  </group>
  <include file="$(find hector_quadrotor_controller)/launch/controller.launch" />

  <!-- Choose motors -->
  <arg name="motors" default="robbe_2827-34_epp1045" />
  <rosparam command="load" file="$(find hector_quadrotor_model)/param/quadrotor_aerodynamics.yaml" />
  <rosparam command="load" file="$(find hector_quadrotor_model)/param/$(arg motors).yaml" />

  <!-- ################################################################### -->
  <!-- Start rviz visualization with preset config -->
  <arg name="rviz_gui" value="true" />
  <group if="$(arg rviz_gui)">
    <node pkg="rviz" type="rviz" name="rviz" args="-d $(find rl_env)/src/Env/HectorQuad/quad.rviz"/>
  </group>

  <!-- ################################################################### -->
  <!-- Debug args for RLAgent and RLEnv -->
  <arg name="debug" default="0" />
  <arg name="agent" default="pegasus" />
  <arg name="env" default="hectorquad" />

  <!-- Start RLAgent and RLEnv -->
  <node name="RLAgent" pkg="rl_agent" type="agent" args="--agent $(arg agent) --prints $(arg debug)" output="screen" />

  <node name="RLEnvironment" pkg="rl_env" type="env" args="--env $(arg env) --prints $(arg debug)" output="screen" />
</launch>
